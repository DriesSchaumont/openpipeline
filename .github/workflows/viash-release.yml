name: viash release CI

on:
  push:
    branches: [ main ]

jobs:
  viash-release:
    runs-on: ${{ matrix.config.os }}
    if: "contains(github.event.head_commit.message, '#release ')"

    strategy:
      fail-fast: true
      matrix:
        config:
        - {name: 'main', os: ubuntu-latest }

    steps:
    - uses: actions/checkout@v2

    - name: Extract version number
      run: |
        echo "${{ github.event.head_commit.message }}" | sed 's/.*#release \([0-9\.]*\).*/version=\1/' >> $GITHUB_ENV
        if [ -z "${{ env.version }}" ]; then
          echo "Error: no version detected."
          echo "Example of correct commit message: '#version 0.1.0'"
          exit 1
        fi

    - name: Cache executables
      uses: actions/cache@v2
      with:
        path: bin
        key: executable-caching-${{ github.workflow }}-${{ matrix.config.name }}

    - name: Fetch viash
      run: |
        bin/init
        bin/viash -h

    - name: Run build
      run: |
        bin/viash_build -r openpipeline -m release -t "${{ env.version }}"

    - name: Run tests
      run: |
        # create check_results folder
        sed -i '/^build_results\/$/d' .gitignore
        mkdir build_results

        # run tests
        bin/viash_test -r openpipeline -m release -t "${{ env.version }}" --append=false --log=build_results/results.tsv

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push containers
      run: |
        bin/viash_push -r openpipeline -m release -t "${{ env.version }}"

    - name: Deploy to target branch
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: .
        publish_branch: main_release

    - name: Archive Release
      uses: thedoctor0/zip-release@master
      with:
        filename: 'release.zip'
        exclusions: '*.git* /*node_modules/* .editorconfig'

    - uses: "marvinpinto/action-automatic-releases@v1.2.0"
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: "${{ env.version }}"
        prerelease: false
        title: "openpipeline ${{ env.version }}"
        files: 'release.zip'

    - name: Upload check results
      uses: actions/upload-artifact@master
      with:
        name: ${{ matrix.config.name }}_results
        path: build_results

