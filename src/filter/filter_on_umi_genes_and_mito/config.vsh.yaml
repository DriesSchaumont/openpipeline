functionality:
  name: filter_on_umi_genes_and_mito
  namespace: "filter"
  version: "dev"
  description: |
    Filter scRNA-seq data based on the primary qc metrics. This is based on both the UMI counts, the gene counts and the mitochondrial genes (genes starting with mt/MT).
  authors:
    - name: Dries De Maeyer
      email: DDeMaey1@its.jnj.com
      roles: [ maintainer ]
      props: { account: ddemaey1 }
  arguments:
    - name: "--input"
      type: file
      description: Input h5ad file
      direction: input
      required: true
    - name: "--output"
      alternatives: ["-o"]
      type: file
      description: Filtered cells in h5ad file.
      direction: output
    - name: "--min_umi_count"
      default: 200
      type: integer
      description: Minimum UMIs captured per cell.
    - name: "--max_umi_count"
      default: 5000000
      type: integer
      description: Maximum UMIs captured per cell.
    - name: "--min_gene_count"
      default: 200
      type: integer
      description: Minimum number of genes sampled per cell.
    - name: "--max_gene_count"
      default: 1500000
      type: integer
      description: Maximum number of genes sampled per cell.
    - name: "--min_gene_occurence_in_cell"
      default: 3
      type: integer
      description: Minimum occurences of a gene sampled in a cell.
    - name: "--min_fraction_mito"
      default: 0
      type: double
      description: Minimum fraction of UMIs that are mitochondrial.
    - name: "--max_fraction_mito"
      default: 0.2
      type: double
      description: Maximum fraction of UMIs that are mitochondrial
    - name: "--compression"
      type: string
      description: The compression format to be used on the final h5ad object.
      default: "gzip"
  resources:
    - type: python_script
      path: script.py
  tests:
    - type: python_script
      path: run_test.py
    - path: ../../../resources/test/pbmc_1k_protein_v3
platforms:
  - type: docker
    image: python:3.8
    python:
      packages:
        - scanpy
        - loompy
  - type: nextflow
